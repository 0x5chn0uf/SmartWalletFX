{
  "summary": {
    "total_fixtures": 42,
    "total_test_files": 122,
    "fixtures_by_category": {
      "database": [
        "sync_session",
        "patch_sync_db",
        "override_get_db",
        "mock_db"
      ],
      "authentication": ["user_payload", "patched_auth_service"],
      "application": ["client"],
      "utility": [
        "anyio_backend",
        "freezer",
        "reset_rate_limiter",
        "event_loop",
        "_isolate_settings",
        "_patch_redis_and_lock",
        "_clear_w3_cache"
      ],
      "test_data": [
        "dummy_metrics",
        "sample_jwks",
        "dummy_redis",
        "sample_model",
        "sample_positions",
        "sample_metrics_model",
        "sample_metrics_data",
        "sample_metrics_schema"
      ],
      "mocking": [
        "mock_settings",
        "mock_redis",
        "mock_web3",
        "mock_w3",
        "mock_w3_compound",
        "mock_output_dir",
        "mock_portfolio_metrics",
        "mock_metrics_repo",
        "mock_position_adapter",
        "mock_snapshot_data"
      ],
      "performance": ["postgres_large_container"],
      "other": [
        "_dependency_override",
        "adapter",
        "_clean_state",
        "tmp_output_dir",
        "repo",
        "blockchain_service",
        "data_analysis_service",
        "aggregation_service",
        "portfolio_service"
      ]
    },
    "scope_distribution": {
      "function": 36,
      "module": 4,
      "session": 2
    },
    "potential_duplicates": {},
    "imported_fixtures": []
  },
  "fixture_details": {
    "client": {
      "name": "client",
      "scope": "function",
      "autouse": false,
      "params": [],
      "docstring": "",
      "dependencies": [],
      "line_number": 93,
      "file": "backend/tests/conftest.py"
    },
    "sync_session": {
      "name": "sync_session",
      "scope": "module",
      "autouse": false,
      "params": [],
      "docstring": "Create a synchronous, in-memory SQLite database session.",
      "dependencies": [],
      "line_number": 127,
      "file": "backend/tests/conftest.py"
    },
    "patch_sync_db": {
      "name": "patch_sync_db",
      "scope": "module",
      "autouse": true,
      "params": [],
      "docstring": "Patches the sync db engine and session for Celery tasks.",
      "dependencies": [],
      "line_number": 138,
      "file": "backend/tests/conftest.py"
    },
    "mock_settings": {
      "name": "mock_settings",
      "scope": "function",
      "autouse": true,
      "params": [],
      "docstring": "Mocks the ARBITRUM_RPC_URL setting.",
      "dependencies": ["monkeypatch"],
      "line_number": 163,
      "file": "backend/tests/conftest.py"
    },
    "dummy_metrics": {
      "name": "dummy_metrics",
      "scope": "function",
      "autouse": false,
      "params": [],
      "docstring": "Returns a dummy PortfolioMetrics object.",
      "dependencies": [],
      "line_number": 169,
      "file": "backend/tests/conftest.py"
    },
    "override_get_db": {
      "name": "override_get_db",
      "scope": "function",
      "autouse": true,
      "params": [],
      "docstring": "Fixture to override the 'get_db' dependency in the FastAPI app.",
      "dependencies": ["db_session"],
      "line_number": 190,
      "file": "backend/tests/conftest.py"
    },
    "mock_db": {
      "name": "mock_db",
      "scope": "function",
      "autouse": false,
      "params": [],
      "docstring": "",
      "dependencies": [],
      "line_number": 13,
      "file": "backend/tests/unit/repositories/test_aggregate_metrics_repository.py"
    },
    "mock_redis": {
      "name": "mock_redis",
      "scope": "function",
      "autouse": false,
      "params": [],
      "docstring": "Mock Redis client.",
      "dependencies": ["self"],
      "line_number": 20,
      "file": "backend/tests/unit/utils/test_metrics_cache.py"
    },
    "mock_web3": {
      "name": "mock_web3",
      "scope": "function",
      "autouse": false,
      "params": [],
      "docstring": "Mock Web3 instance.",
      "dependencies": ["self"],
      "line_number": 22,
      "file": "backend/tests/unit/services/test_blockchain_service.py"
    },
    "anyio_backend": {
      "name": "anyio_backend",
      "scope": "session",
      "autouse": false,
      "params": [],
      "docstring": "Force AnyIO to use only the asyncio backend during tests.",
      "dependencies": [],
      "line_number": 235,
      "file": "backend/tests/conftest.py"
    },
    "freezer": {
      "name": "freezer",
      "scope": "function",
      "autouse": false,
      "params": [],
      "docstring": "Fixture that provides a context manager for freezing time.\n\nAny calls to datetime.datetime.now() or utcnow() will return the same\ntimestamp within the with block.\n\nYields:\n    A context manager for freezing time.",
      "dependencies": [],
      "line_number": 263,
      "file": "backend/tests/conftest.py"
    },
    "reset_rate_limiter": {
      "name": "reset_rate_limiter",
      "scope": "function",
      "autouse": true,
      "params": [],
      "docstring": "Clear the in-memory rate limiter's storage between tests.",
      "dependencies": [],
      "line_number": 282,
      "file": "backend/tests/conftest.py"
    },
    "event_loop": {
      "name": "event_loop",
      "scope": "session",
      "autouse": false,
      "params": [],
      "docstring": "Create a dedicated asyncio loop for the entire test session.",
      "dependencies": [],
      "line_number": 406,
      "file": "backend/tests/conftest.py"
    },
    "postgres_large_container": {
      "name": "postgres_large_container",
      "scope": "module",
      "autouse": false,
      "params": [],
      "docstring": "Spins up the postgres-large container (port 5435), yields DB URL, and tears down after tests.\nAssumes docker-compose.e2e.yml is up.",
      "dependencies": [],
      "line_number": 25,
      "file": "backend/tests/e2e/test_performance.py"
    },
    "sample_jwks": {
      "name": "sample_jwks",
      "scope": "function",
      "autouse": false,
      "params": [],
      "docstring": "Create a sample JWKSet for testing.",
      "dependencies": [],
      "line_number": 24,
      "file": "backend/tests/unit/utils/test_jwks_cache.py"
    },
    "user_payload": {
      "name": "user_payload",
      "scope": "function",
      "autouse": false,
      "params": [],
      "docstring": "",
      "dependencies": [],
      "line_number": 7,
      "file": "backend/tests/integration/auth/test_auth_flow.py"
    },
    "_isolate_settings": {
      "name": "_isolate_settings",
      "scope": "function",
      "autouse": true,
      "params": [],
      "docstring": "Snapshot & restore mutable settings between tests.",
      "dependencies": ["monkeypatch"],
      "line_number": 18,
      "file": "backend/tests/integration/jwt_rotation/test_rotation_task.py"
    },
    "_patch_redis_and_lock": {
      "name": "_patch_redis_and_lock",
      "scope": "function",
      "autouse": true,
      "params": [],
      "docstring": "Patch Redis client builder and *acquire_lock* helper for isolation.",
      "dependencies": ["monkeypatch"],
      "line_number": 30,
      "file": "backend/tests/integration/jwt_rotation/test_rotation_task.py"
    },
    "patched_auth_service": {
      "name": "patched_auth_service",
      "scope": "function",
      "autouse": false,
      "params": [],
      "docstring": "Patch *AuthService* used in auth endpoints with DummyAuthService.",
      "dependencies": ["monkeypatch"],
      "line_number": 169,
      "file": "backend/tests/integration/test_auth.py"
    },
    "mock_w3": {
      "name": "mock_w3",
      "scope": "function",
      "autouse": false,
      "params": [],
      "docstring": "",
      "dependencies": [],
      "line_number": 15,
      "file": "backend/tests/integration/test_defi_aave_endpoint.py"
    },
    "dummy_redis": {
      "name": "dummy_redis",
      "scope": "function",
      "autouse": false,
      "params": [],
      "docstring": "",
      "dependencies": ["monkeypatch"],
      "line_number": 34,
      "file": "backend/tests/integration/test_defi_aggregate_endpoint.py"
    },
    "mock_w3_compound": {
      "name": "mock_w3_compound",
      "scope": "function",
      "autouse": false,
      "params": [],
      "docstring": "",
      "dependencies": [],
      "line_number": 13,
      "file": "backend/tests/integration/test_defi_compound_endpoint.py"
    },
    "_dependency_override": {
      "name": "_dependency_override",
      "scope": "function",
      "autouse": false,
      "params": [],
      "docstring": "",
      "dependencies": ["db_session"],
      "line_number": 76,
      "file": "backend/tests/integration/test_timeline_dynamic_aggregator_endpoints.py"
    },
    "adapter": {
      "name": "adapter",
      "scope": "function",
      "autouse": false,
      "params": [],
      "docstring": "Return a RadiantContractAdapter instance with on-chain calls mocked.",
      "dependencies": ["monkeypatch", "tmp_path"],
      "line_number": 61,
      "file": "backend/tests/unit/adapters/test_radiant_contract_adapter.py"
    },
    "_clean_state": {
      "name": "_clean_state",
      "scope": "function",
      "autouse": true,
      "params": [],
      "docstring": "Ensure we start each test with a clean key-set state.",
      "dependencies": ["monkeypatch"],
      "line_number": 28,
      "file": "backend/tests/unit/auth/test_jwt_rotation.py"
    },
    "mock_output_dir": {
      "name": "mock_output_dir",
      "scope": "function",
      "autouse": false,
      "params": [],
      "docstring": "Provides a temporary directory for backup dumps.",
      "dependencies": ["tmp_path"],
      "line_number": 13,
      "file": "backend/tests/unit/backups/test_audit_logging.py"
    },
    "tmp_output_dir": {
      "name": "tmp_output_dir",
      "scope": "module",
      "autouse": false,
      "params": [],
      "docstring": "",
      "dependencies": ["tmp_path_factory"],
      "line_number": 15,
      "file": "backend/tests/unit/backups/test_backup_cmd.py"
    },
    "_clear_w3_cache": {
      "name": "_clear_w3_cache",
      "scope": "function",
      "autouse": true,
      "params": [],
      "docstring": "Ensure the Web3 provider cache is cleared before & after each test.",
      "dependencies": [],
      "line_number": 15,
      "file": "backend/tests/unit/core/test_dependencies.py"
    },
    "repo": {
      "name": "repo",
      "scope": "function",
      "autouse": false,
      "params": [],
      "docstring": "",
      "dependencies": ["mock_db"],
      "line_number": 22,
      "file": "backend/tests/unit/repositories/test_aggregate_metrics_repository.py"
    },
    "sample_model": {
      "name": "sample_model",
      "scope": "function",
      "autouse": false,
      "params": [],
      "docstring": "",
      "dependencies": [],
      "line_number": 27,
      "file": "backend/tests/unit/repositories/test_aggregate_metrics_repository.py"
    },
    "blockchain_service": {
      "name": "blockchain_service",
      "scope": "function",
      "autouse": false,
      "params": [],
      "docstring": "Blockchain service instance.",
      "dependencies": ["self"],
      "line_number": 17,
      "file": "backend/tests/unit/services/test_blockchain_service.py"
    },
    "data_analysis_service": {
      "name": "data_analysis_service",
      "scope": "function",
      "autouse": false,
      "params": [],
      "docstring": "Create a DataAnalysisService instance for testing.",
      "dependencies": ["self", "db_session"],
      "line_number": 18,
      "file": "backend/tests/unit/services/test_data_analysis_service.py"
    },
    "mock_portfolio_metrics": {
      "name": "mock_portfolio_metrics",
      "scope": "function",
      "autouse": false,
      "params": [],
      "docstring": "Mock portfolio metrics.",
      "dependencies": ["self"],
      "line_number": 23,
      "file": "backend/tests/unit/services/test_data_analysis_service.py"
    },
    "mock_metrics_repo": {
      "name": "mock_metrics_repo",
      "scope": "function",
      "autouse": false,
      "params": [],
      "docstring": "Mock aggregate metrics repository.",
      "dependencies": ["self"],
      "line_number": 19,
      "file": "backend/tests/unit/services/test_defi_aggregation_service.py"
    },
    "mock_position_adapter": {
      "name": "mock_position_adapter",
      "scope": "function",
      "autouse": false,
      "params": [],
      "docstring": "Mock DeFi position adapter.",
      "dependencies": ["self"],
      "line_number": 24,
      "file": "backend/tests/unit/services/test_defi_aggregation_service.py"
    },
    "aggregation_service": {
      "name": "aggregation_service",
      "scope": "function",
      "autouse": false,
      "params": [],
      "docstring": "DeFi aggregation service instance.",
      "dependencies": ["self", "mock_db", "mock_redis"],
      "line_number": 29,
      "file": "backend/tests/unit/services/test_defi_aggregation_service.py"
    },
    "sample_positions": {
      "name": "sample_positions",
      "scope": "function",
      "autouse": false,
      "params": [],
      "docstring": "Sample DeFi positions for testing.",
      "dependencies": ["self"],
      "line_number": 37,
      "file": "backend/tests/unit/services/test_defi_aggregation_service.py"
    },
    "sample_metrics_model": {
      "name": "sample_metrics_model",
      "scope": "function",
      "autouse": false,
      "params": [],
      "docstring": "Sample AggregateMetricsModel instance.",
      "dependencies": ["self"],
      "line_number": 67,
      "file": "backend/tests/unit/services/test_defi_aggregation_service.py"
    },
    "portfolio_service": {
      "name": "portfolio_service",
      "scope": "function",
      "autouse": false,
      "params": [],
      "docstring": "Portfolio calculation service instance.",
      "dependencies": ["self", "mock_db"],
      "line_number": 18,
      "file": "backend/tests/unit/services/test_portfolio_service.py"
    },
    "mock_snapshot_data": {
      "name": "mock_snapshot_data",
      "scope": "function",
      "autouse": false,
      "params": [],
      "docstring": "Mock portfolio snapshot data.",
      "dependencies": ["self"],
      "line_number": 23,
      "file": "backend/tests/unit/services/test_portfolio_service.py"
    },
    "sample_metrics_data": {
      "name": "sample_metrics_data",
      "scope": "function",
      "autouse": false,
      "params": [],
      "docstring": "Sample metrics data for testing.",
      "dependencies": ["self"],
      "line_number": 25,
      "file": "backend/tests/unit/utils/test_metrics_cache.py"
    },
    "sample_metrics_schema": {
      "name": "sample_metrics_schema",
      "scope": "function",
      "autouse": false,
      "params": [],
      "docstring": "Sample AggregateMetricsSchema instance.",
      "dependencies": ["self", "sample_metrics_data"],
      "line_number": 46,
      "file": "backend/tests/unit/utils/test_metrics_cache.py"
    }
  },
  "usage_mapping": {
    "self": [
      "backend/tests/unit/utils/test_encryption_comprehensive.py",
      "backend/tests/unit/monitoring/test_metrics.py",
      "backend/tests/e2e/test_performance.py",
      "backend/tests/unit/tasks/test_backups_comprehensive.py",
      "backend/tests/unit/storage/test_s3_comprehensive.py",
      "backend/tests/unit/utils/test_jwks_cache.py",
      "backend/tests/unit/services/test_blockchain_service.py",
      "backend/tests/unit/utils/test_alerting.py",
      "backend/tests/unit/services/test_portfolio_service.py",
      "backend/tests/unit/services/test_defi_aggregation_service.py",
      "backend/tests/unit/services/test_data_analysis_service.py",
      "backend/tests/unit/utils/test_rate_limiter.py",
      "backend/tests/unit/utils/test_jwt_comprehensive.py",
      "backend/tests/integration/tasks/test_jwt_rotation_cache_invalidation.py"
    ],
    "large_database": ["backend/tests/e2e/test_performance.py"],
    "tmp_path": [
      "backend/tests/unit/backups/test_restore_dump.py",
      "backend/tests/unit/backups/test_backup_failure.py",
      "backend/tests/unit/backups/test_cli_restore.py",
      "backend/tests/e2e/test_performance.py",
      "backend/tests/unit/backups/test_storage_adapter.py",
      "backend/tests/performance/test_auth_constant_time.py",
      "backend/tests/unit/adapters/test_radiant_contract_adapter.py",
      "backend/tests/unit/backups/test_cli_backup.py",
      "backend/tests/unit/adapters/test_radiant_helpers_extra.py",
      "backend/tests/unit/backups/test_s3_storage_adapter.py",
      "backend/tests/integration/backups/test_backup_encryption_upload.py"
    ],
    "backup_file": ["backend/tests/e2e/test_performance.py"],
    "mock_task": ["backend/tests/integration/api/admin/test_admin_db.py"],
    "client": [
      "backend/tests/integration/test_auth.py",
      "backend/tests/integration/audit/test_audit_validation.py",
      "backend/tests/integration/test_error_handling_endpoints.py",
      "backend/tests/integration/auth/test_timing_attack.py",
      "backend/tests/integration/auth/test_auth_flow.py",
      "backend/tests/integration/test_auth_token_endpoint.py"
    ],
    "user_payload": ["backend/tests/integration/auth/test_auth_flow.py"],
    "monkeypatch": [
      "backend/tests/unit/backups/test_cli_restore.py",
      "backend/tests/unit/core/test_di.py",
      "backend/tests/unit/core/test_dependencies.py",
      "backend/tests/unit/adapters/test_radiant_helpers_extra.py",
      "backend/tests/integration/backups/test_backup_encryption_upload.py",
      "backend/tests/unit/backups/test_backup_cmd.py",
      "backend/tests/integration/backups/test_retention_flow.py",
      "backend/tests/unit/utils/test_jwt_keys.py",
      "backend/tests/unit/utils/test_logging.py",
      "backend/tests/unit/audit/test_validate.py",
      "backend/tests/integration/jwt_rotation/test_rotation_task.py",
      "backend/tests/unit/backups/test_restore_dump.py",
      "backend/tests/integration/jwt_rotation/test_jwt_rotation_task.py",
      "backend/tests/unit/backups/test_backup_failure.py",
      "backend/tests/unit/adapters/test_radiant_contract_adapter.py",
      "backend/tests/unit/auth/test_jwt_utils.py",
      "backend/tests/unit/backups/test_cli_backup.py",
      "backend/tests/unit/backups/test_audit_logging.py",
      "backend/tests/unit/backups/test_s3_storage_adapter.py",
      "backend/tests/property/backups/test_builder_property.py"
    ],
    "mock_redis": [
      "backend/tests/integration/tasks/test_jwt_rotation_cache_invalidation.py"
    ],
    "payload": ["backend/tests/integration/test_auth.py"],
    "expected_status": ["backend/tests/integration/test_auth.py"],
    "patched_auth_service": ["backend/tests/integration/test_auth.py"],
    "_dependency_override": [
      "backend/tests/integration/test_timeline_dynamic_aggregator_endpoints.py"
    ],
    "benchmark": [
      "backend/tests/performance/test_bcrypt_rounds.py",
      "backend/tests/performance/test_jwt_perf.py"
    ],
    "rounds": ["backend/tests/performance/test_bcrypt_rounds.py"],
    "tmp_path_factory": [
      "backend/tests/property/backups/test_builder_property.py"
    ],
    "label": ["backend/tests/property/backups/test_builder_property.py"],
    "keyset": ["backend/tests/property/jwt_rotation/test_rotation_property.py"],
    "snapshots": ["backend/tests/property/test_timeline_response.py"],
    "interval": ["backend/tests/property/test_timeline_response.py"],
    "pwd": [
      "backend/tests/unit/strategies/test_strong_passwords.py",
      "backend/tests/templates/test_auth_property_templates.py"
    ],
    "email": ["backend/tests/templates/test_auth_property_templates.py"],
    "adapter": [
      "backend/tests/unit/adapters/test_radiant_contract_adapter.py",
      "backend/tests/unit/adapters/test_defi_position_adapter.py"
    ],
    "mock_get": [
      "backend/tests/unit/adapters/test_radiant_contract_adapter.py"
    ],
    "mock_web3": [
      "backend/tests/unit/adapters/test_radiant_helpers_extra.py",
      "backend/tests/unit/adapters/test_radiant_contract_adapter.py"
    ],
    "freezer": ["backend/tests/unit/auth/test_jwt_rotation.py"],
    "secret": ["backend/tests/unit/auth/test_jwt_rotation.py"],
    "user_id": ["backend/tests/unit/auth/test_jwt_rotation.py"],
    "ttl": ["backend/tests/unit/auth/test_jwt_rotation.py"],
    "password": ["backend/tests/unit/auth/test_password_hasher.py"],
    "mock_log_event": ["backend/tests/unit/backups/test_audit_logging.py"],
    "mock_run_subprocess": ["backend/tests/unit/backups/test_audit_logging.py"],
    "mock_encrypt_file": ["backend/tests/unit/backups/test_audit_logging.py"],
    "mock_get_storage_adapter": [
      "backend/tests/unit/backups/test_audit_logging.py"
    ],
    "mock_metrics": ["backend/tests/unit/backups/test_audit_logging.py"],
    "mock_output_dir": ["backend/tests/unit/backups/test_audit_logging.py"],
    "tmp_output_dir": ["backend/tests/unit/backups/test_backup_cmd.py"],
    "target": ["backend/tests/unit/backups/test_make_targets.py"],
    "dummy_metrics": [
      "backend/tests/unit/service/test_snapshot_aggregation_service.py"
    ],
    "sync_session": [
      "backend/tests/unit/service/test_snapshot_aggregation_service_errors.py"
    ],
    "blockchain_service": [
      "backend/tests/unit/services/test_blockchain_service.py"
    ],
    "data_analysis_service": [
      "backend/tests/unit/services/test_data_analysis_service.py"
    ],
    "aggregation_service": [
      "backend/tests/unit/services/test_defi_aggregation_service.py"
    ],
    "portfolio_service": [
      "backend/tests/unit/services/test_portfolio_service.py"
    ],
    "mock_boto3": ["backend/tests/unit/storage/test_s3_comprehensive.py"],
    "mock_settings": [
      "backend/tests/unit/storage/test_s3_comprehensive.py",
      "backend/tests/unit/utils/test_jwt_comprehensive.py",
      "backend/tests/unit/utils/test_encryption_comprehensive.py",
      "backend/tests/unit/tasks/test_backups_comprehensive.py"
    ],
    "addr": ["backend/tests/unit/strategies/test_email_addresses.py"],
    "tok": ["backend/tests/unit/strategies/test_jwt_tokens.py"],
    "sql": ["backend/tests/unit/strategies/test_safe_sql_strings.py"],
    "mock_purge_task": [
      "backend/tests/unit/tasks/test_backups_comprehensive.py"
    ],
    "mock_audit": [
      "backend/tests/unit/utils/test_jwt_comprehensive.py",
      "backend/tests/unit/tasks/test_backups_comprehensive.py"
    ],
    "mock_create_dump": [
      "backend/tests/unit/tasks/test_backups_comprehensive.py"
    ],
    "mock_logger": ["backend/tests/unit/tasks/test_backups_comprehensive.py"],
    "mock_restore_dump": [
      "backend/tests/unit/tasks/test_backups_comprehensive.py"
    ],
    "mock_os": ["backend/tests/unit/tasks/test_backups_comprehensive.py"],
    "mock_datetime": ["backend/tests/unit/tasks/test_backups_comprehensive.py"],
    "mock_run": ["backend/tests/unit/utils/test_encryption_comprehensive.py"],
    "mock_redis_class": ["backend/tests/unit/utils/test_jwks_cache.py"],
    "mock_file": ["backend/tests/unit/utils/test_jwt_comprehensive.py"],
    "mock_encode": ["backend/tests/unit/utils/test_jwt_comprehensive.py"],
    "mock_get_header": ["backend/tests/unit/utils/test_jwt_comprehensive.py"],
    "mock_decode": ["backend/tests/unit/utils/test_jwt_comprehensive.py"],
    "input_val": ["backend/tests/unit/validators/test_security_validator.py"],
    "expected": ["backend/tests/unit/validators/test_security_validator.py"]
  }
}
