version: '3.9'

# -----------------------------------------------------------------------------
# Test Compose File for End-to-End Backup/Restore Testing
# -----------------------------------------------------------------------------
# This compose file provides isolated PostgreSQL instances for end-to-end testing
# of the backup and restore functionality. Each test can spin up a fresh container
# to ensure complete isolation and prevent test interference.
#
# Usage:
#   # Start test PostgreSQL instance
#   docker compose -f docker-compose.test.yml up -d postgres-test
#
#   # Run end-to-end tests
#   cd backend && pytest -m e2e
#
#   # Stop and remove containers
#   docker compose -f docker-compose.test.yml down -v
# -----------------------------------------------------------------------------

services:
  postgres-test:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: testuser
      POSTGRES_PASSWORD: testpass
      POSTGRES_DB: testdb
    ports:
      - "5433:5432"  # Different port to avoid conflicts with development
    volumes:
      - ./backend/tests/fixtures/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U testuser -d testdb"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - test-network

  # Optional: Redis for testing Celery tasks
  redis-test:
    image: redis:7-alpine
    ports:
      - "6380:6379"  # Different port to avoid conflicts
    networks:
      - test-network

networks:
  test-network:
    driver: bridge
