"""
Add created_at and updated_at to portfolio_snapshot_cache

Revision ID: 016dd821654a
Revises: 0006_add_aggregate_metrics_table
Create Date: 2025-06-25 09:39:16.662635

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "0007_add_created_at_and_updated_at_to_"
down_revision = "0006_add_aggregate_metrics_table"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("groups", schema=None) as batch_op:
        batch_op.alter_column(
            "id",
            existing_type=sa.NUMERIC(),
            type_=sa.UUID(),
            existing_nullable=False,
        )
        batch_op.alter_column(
            "user_id",
            existing_type=sa.NUMERIC(),
            type_=sa.UUID(),
            existing_nullable=True,
        )
        batch_op.drop_column("description")
        batch_op.drop_column("created_at")

    with op.batch_alter_table("historical_balances", schema=None) as batch_op:
        batch_op.alter_column(
            "id",
            existing_type=sa.NUMERIC(),
            type_=sa.UUID(),
            existing_nullable=False,
        )
        batch_op.alter_column(
            "wallet_id",
            existing_type=sa.NUMERIC(),
            type_=sa.UUID(),
            nullable=False,
        )
        batch_op.alter_column(
            "token_id",
            existing_type=sa.NUMERIC(),
            type_=sa.UUID(),
            existing_nullable=True,
        )
        batch_op.drop_column("created_at")

    with op.batch_alter_table("portfolio_snapshot_cache", schema=None) as batch_op:
        batch_op.add_column(sa.Column("updated_at", sa.DateTime(), nullable=False))
        batch_op.alter_column(
            "id",
            existing_type=sa.NUMERIC(),
            type_=sa.UUID(),
            existing_nullable=False,
        )
        batch_op.alter_column(
            "created_at",
            existing_type=sa.DATETIME(),
            nullable=False,
        )

    with op.batch_alter_table("portfolio_snapshots", schema=None) as batch_op:
        batch_op.alter_column(
            "id",
            existing_type=sa.NUMERIC(),
            type_=sa.UUID(),
            existing_nullable=False,
        )

    with op.batch_alter_table("refresh_tokens", schema=None) as batch_op:
        batch_op.alter_column(
            "id",
            existing_type=sa.NUMERIC(),
            type_=sa.UUID(),
            existing_nullable=False,
        )
        batch_op.alter_column(
            "user_id",
            existing_type=sa.NUMERIC(),
            type_=sa.UUID(),
            existing_nullable=False,
        )
        batch_op.drop_column("revoked")
        batch_op.drop_column("created_at")
        batch_op.create_index(
            batch_op.f("ix_refresh_tokens_expires_at"),
            ["expires_at"],
            unique=False,
        )
        batch_op.create_index(batch_op.f("ix_refresh_tokens_id"), ["id"], unique=False)
        batch_op.create_unique_constraint("uq_refresh_tokens_jti_hash", ["jti_hash"])

    with op.batch_alter_table("token_balances", schema=None) as batch_op:
        batch_op.alter_column(
            "id",
            existing_type=sa.NUMERIC(),
            type_=sa.UUID(),
            existing_nullable=False,
        )
        batch_op.alter_column(
            "wallet_id",
            existing_type=sa.NUMERIC(),
            type_=sa.UUID(),
            existing_nullable=True,
        )
        batch_op.alter_column(
            "token_id",
            existing_type=sa.NUMERIC(),
            type_=sa.UUID(),
            existing_nullable=True,
        )
        batch_op.drop_column("updated_at")

    with op.batch_alter_table("token_prices", schema=None) as batch_op:
        batch_op.alter_column(
            "id",
            existing_type=sa.NUMERIC(),
            type_=sa.UUID(),
            existing_nullable=False,
        )
        batch_op.alter_column(
            "token_id",
            existing_type=sa.NUMERIC(),
            type_=sa.UUID(),
            existing_nullable=True,
        )
        batch_op.drop_column("created_at")

    with op.batch_alter_table("tokens", schema=None) as batch_op:
        batch_op.alter_column(
            "id",
            existing_type=sa.NUMERIC(),
            type_=sa.UUID(),
            existing_nullable=False,
        )
        batch_op.drop_column("last_price_update")
        batch_op.drop_column("chain")
        batch_op.drop_column("created_at")
        batch_op.drop_column("updated_at")
        batch_op.drop_column("extra_metadata")

    with op.batch_alter_table("transactions", schema=None) as batch_op:
        batch_op.alter_column(
            "id",
            existing_type=sa.INTEGER(),
            type_=sa.UUID(),
            existing_nullable=False,
        )
        batch_op.alter_column(
            "wallet_id",
            existing_type=sa.NUMERIC(),
            type_=sa.UUID(),
            existing_nullable=True,
        )
        batch_op.alter_column(
            "token_id",
            existing_type=sa.NUMERIC(),
            type_=sa.UUID(),
            existing_nullable=True,
        )
        batch_op.drop_column("created_at")
        batch_op.drop_column("extra_metadata")
        batch_op.drop_column("to_address")
        batch_op.drop_column("from_address")
        batch_op.drop_index(op.f("ix_transactions_from_address"))
        batch_op.drop_index(op.f("ix_transactions_to_address"))

    with op.batch_alter_table("users", schema=None) as batch_op:
        batch_op.alter_column(
            "id",
            existing_type=sa.NUMERIC(),
            type_=sa.UUID(),
            existing_nullable=False,
        )
        batch_op.alter_column("created_at", existing_type=sa.DATETIME(), nullable=False)
        batch_op.alter_column("updated_at", existing_type=sa.DATETIME(), nullable=False)

    with op.batch_alter_table("wallet_groups", schema=None) as batch_op:
        batch_op.alter_column(
            "id",
            existing_type=sa.NUMERIC(),
            type_=sa.UUID(),
            existing_nullable=False,
        )
        batch_op.alter_column(
            "wallet_id",
            existing_type=sa.NUMERIC(),
            type_=sa.UUID(),
            existing_nullable=True,
        )
        batch_op.alter_column(
            "group_id",
            existing_type=sa.NUMERIC(),
            type_=sa.UUID(),
            existing_nullable=True,
        )

    with op.batch_alter_table("wallets", schema=None) as batch_op:
        batch_op.alter_column(
            "id",
            existing_type=sa.NUMERIC(),
            type_=sa.UUID(),
            existing_nullable=False,
        )
        batch_op.alter_column(
            "user_id",
            existing_type=sa.NUMERIC(),
            type_=sa.UUID(),
            existing_nullable=True,
        )
        batch_op.drop_column("created_at")
        batch_op.drop_column("updated_at")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("wallets", schema=None) as batch_op:
        batch_op.add_column(sa.Column("updated_at", sa.DATETIME(), nullable=False))
        batch_op.add_column(sa.Column("created_at", sa.DATETIME(), nullable=False))
        batch_op.alter_column(
            "user_id",
            existing_type=sa.UUID(),
            type_=sa.NUMERIC(),
            existing_nullable=True,
        )
        batch_op.alter_column(
            "id",
            existing_type=sa.UUID(),
            type_=sa.NUMERIC(),
            existing_nullable=False,
        )

    with op.batch_alter_table("wallet_groups", schema=None) as batch_op:
        batch_op.alter_column(
            "group_id",
            existing_type=sa.UUID(),
            type_=sa.NUMERIC(),
            existing_nullable=True,
        )
        batch_op.alter_column(
            "wallet_id",
            existing_type=sa.UUID(),
            type_=sa.NUMERIC(),
            existing_nullable=True,
        )
        batch_op.alter_column(
            "id",
            existing_type=sa.UUID(),
            type_=sa.NUMERIC(),
            existing_nullable=False,
        )

    with op.batch_alter_table("users", schema=None) as batch_op:
        batch_op.alter_column("updated_at", existing_type=sa.DATETIME(), nullable=True)
        batch_op.alter_column("created_at", existing_type=sa.DATETIME(), nullable=True)
        batch_op.alter_column(
            "id",
            existing_type=sa.UUID(),
            type_=sa.NUMERIC(),
            existing_nullable=False,
        )

    with op.batch_alter_table("transactions", schema=None) as batch_op:
        batch_op.add_column(
            sa.Column("from_address", sa.VARCHAR(length=255), nullable=True)
        )
        batch_op.add_column(
            sa.Column("to_address", sa.VARCHAR(length=255), nullable=True)
        )
        batch_op.add_column(sa.Column("extra_metadata", sa.JSON(), nullable=True))
        batch_op.add_column(sa.Column("created_at", sa.DATETIME(), nullable=False))
        batch_op.alter_column(
            "token_id",
            existing_type=sa.UUID(),
            type_=sa.NUMERIC(),
            existing_nullable=True,
        )
        batch_op.alter_column(
            "wallet_id",
            existing_type=sa.UUID(),
            type_=sa.NUMERIC(),
            existing_nullable=True,
        )
        batch_op.alter_column(
            "id",
            existing_type=sa.UUID(),
            type_=sa.INTEGER(),
            existing_nullable=False,
        )
        batch_op.create_index(
            op.f("ix_transactions_to_address"), ["to_address"], unique=False
        )
        batch_op.create_index(
            op.f("ix_transactions_from_address"),
            ["from_address"],
            unique=False,
        )

    with op.batch_alter_table("tokens", schema=None) as batch_op:
        batch_op.add_column(sa.Column("extra_metadata", sa.JSON(), nullable=True))
        batch_op.add_column(sa.Column("updated_at", sa.DATETIME(), nullable=False))
        batch_op.add_column(sa.Column("created_at", sa.DATETIME(), nullable=False))
        batch_op.add_column(sa.Column("chain", sa.VARCHAR(), nullable=True))
        batch_op.add_column(
            sa.Column("last_price_update", sa.DATETIME(), nullable=True)
        )
        batch_op.alter_column(
            "id",
            existing_type=sa.UUID(),
            type_=sa.NUMERIC(),
            existing_nullable=False,
        )

    with op.batch_alter_table("token_prices", schema=None) as batch_op:
        batch_op.add_column(sa.Column("created_at", sa.DATETIME(), nullable=False))
        batch_op.alter_column(
            "token_id",
            existing_type=sa.UUID(),
            type_=sa.NUMERIC(),
            existing_nullable=True,
        )
        batch_op.alter_column(
            "id",
            existing_type=sa.UUID(),
            type_=sa.NUMERIC(),
            existing_nullable=False,
        )

    with op.batch_alter_table("token_balances", schema=None) as batch_op:
        batch_op.add_column(sa.Column("updated_at", sa.DATETIME(), nullable=False))
        batch_op.alter_column(
            "token_id",
            existing_type=sa.UUID(),
            type_=sa.NUMERIC(),
            existing_nullable=True,
        )
        batch_op.alter_column(
            "wallet_id",
            existing_type=sa.UUID(),
            type_=sa.NUMERIC(),
            existing_nullable=True,
        )
        batch_op.alter_column(
            "id",
            existing_type=sa.UUID(),
            type_=sa.NUMERIC(),
            existing_nullable=False,
        )

    with op.batch_alter_table("refresh_tokens", schema=None) as batch_op:
        batch_op.drop_constraint("uq_refresh_tokens_jti_hash", type_="unique")
        batch_op.drop_index(batch_op.f("ix_refresh_tokens_id"))
        batch_op.drop_index(batch_op.f("ix_refresh_tokens_expires_at"))
        batch_op.add_column(sa.Column("created_at", sa.DATETIME(), nullable=False))
        batch_op.add_column(sa.Column("revoked", sa.BOOLEAN(), nullable=True))
        batch_op.alter_column(
            "user_id",
            existing_type=sa.UUID(),
            type_=sa.NUMERIC(),
            existing_nullable=False,
        )
        batch_op.alter_column(
            "id",
            existing_type=sa.UUID(),
            type_=sa.NUMERIC(),
            existing_nullable=False,
        )

    with op.batch_alter_table("portfolio_snapshots", schema=None) as batch_op:
        batch_op.alter_column(
            "id",
            existing_type=sa.UUID(),
            type_=sa.NUMERIC(),
            existing_nullable=False,
        )

    with op.batch_alter_table("portfolio_snapshot_cache", schema=None) as batch_op:
        batch_op.alter_column("created_at", existing_type=sa.DATETIME(), nullable=True)
        batch_op.alter_column(
            "id",
            existing_type=sa.UUID(),
            type_=sa.NUMERIC(),
            existing_nullable=False,
        )
        batch_op.drop_column("updated_at")

    with op.batch_alter_table("historical_balances", schema=None) as batch_op:
        batch_op.add_column(sa.Column("created_at", sa.DATETIME(), nullable=False))
        batch_op.alter_column(
            "token_id",
            existing_type=sa.UUID(),
            type_=sa.NUMERIC(),
            existing_nullable=True,
        )
        batch_op.alter_column(
            "wallet_id",
            existing_type=sa.UUID(),
            type_=sa.NUMERIC(),
            nullable=True,
        )
        batch_op.alter_column(
            "id",
            existing_type=sa.UUID(),
            type_=sa.NUMERIC(),
            existing_nullable=False,
        )

    with op.batch_alter_table("groups", schema=None) as batch_op:
        batch_op.add_column(sa.Column("created_at", sa.DATETIME(), nullable=False))
        batch_op.add_column(
            sa.Column("description", sa.VARCHAR(length=255), nullable=True)
        )
        batch_op.alter_column(
            "user_id",
            existing_type=sa.UUID(),
            type_=sa.NUMERIC(),
            existing_nullable=True,
        )
        batch_op.alter_column(
            "id",
            existing_type=sa.UUID(),
            type_=sa.NUMERIC(),
            existing_nullable=False,
        )
    # ### end Alembic commands ###
