"""
Add created_at and updated_at to portfolio_snapshot_cache

Revision ID: 016dd821654a
Revises: 0006_add_aggregate_metrics_table
Create Date: 2025-06-25 09:39:16.662635

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import sqlite

# revision identifiers, used by Alembic.
revision = "0007_add_created_at_and_updated_at_to_"
down_revision = "0006_add_aggregate_metrics_table"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "aggregate_metrics",
        "id",
        existing_type=sa.NUMERIC(),
        type_=sa.UUID(),
        existing_nullable=False,
    )
    op.alter_column(
        "groups",
        "id",
        existing_type=sa.NUMERIC(),
        type_=sa.UUID(),
        existing_nullable=False,
    )
    op.alter_column(
        "groups",
        "user_id",
        existing_type=sa.NUMERIC(),
        type_=sa.UUID(),
        existing_nullable=True,
    )
    op.drop_column("groups", "description")
    op.drop_column("groups", "created_at")
    op.alter_column(
        "historical_balances",
        "id",
        existing_type=sa.NUMERIC(),
        type_=sa.UUID(),
        existing_nullable=False,
    )
    op.alter_column(
        "historical_balances",
        "wallet_id",
        existing_type=sa.NUMERIC(),
        type_=sa.UUID(),
        nullable=False,
    )
    op.alter_column(
        "historical_balances",
        "token_id",
        existing_type=sa.NUMERIC(),
        type_=sa.UUID(),
        existing_nullable=True,
    )
    op.drop_column("historical_balances", "created_at")
    op.add_column(
        "portfolio_snapshot_cache",
        sa.Column("updated_at", sa.DateTime(), nullable=False),
    )
    op.alter_column(
        "portfolio_snapshot_cache",
        "id",
        existing_type=sa.NUMERIC(),
        type_=sa.UUID(),
        existing_nullable=False,
    )
    op.alter_column(
        "portfolio_snapshot_cache",
        "created_at",
        existing_type=sa.DATETIME(),
        nullable=False,
    )
    op.alter_column(
        "portfolio_snapshots",
        "id",
        existing_type=sa.NUMERIC(),
        type_=sa.UUID(),
        existing_nullable=False,
    )
    op.alter_column(
        "refresh_tokens",
        "id",
        existing_type=sa.NUMERIC(),
        type_=sa.UUID(),
        existing_nullable=False,
    )
    op.alter_column(
        "refresh_tokens",
        "user_id",
        existing_type=sa.NUMERIC(),
        type_=sa.UUID(),
        existing_nullable=False,
    )
    op.create_index(
        op.f("ix_refresh_tokens_expires_at"),
        "refresh_tokens",
        ["expires_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_refresh_tokens_id"), "refresh_tokens", ["id"], unique=False
    )
    op.create_unique_constraint(
        "uq_refresh_tokens_jti_hash", "refresh_tokens", ["jti_hash"]
    )
    op.drop_column("refresh_tokens", "revoked")
    op.drop_column("refresh_tokens", "created_at")
    op.alter_column(
        "token_balances",
        "id",
        existing_type=sa.NUMERIC(),
        type_=sa.UUID(),
        existing_nullable=False,
    )
    op.alter_column(
        "token_balances",
        "wallet_id",
        existing_type=sa.NUMERIC(),
        type_=sa.UUID(),
        existing_nullable=True,
    )
    op.alter_column(
        "token_balances",
        "token_id",
        existing_type=sa.NUMERIC(),
        type_=sa.UUID(),
        existing_nullable=True,
    )
    op.drop_column("token_balances", "updated_at")
    op.alter_column(
        "token_prices",
        "id",
        existing_type=sa.NUMERIC(),
        type_=sa.UUID(),
        existing_nullable=False,
    )
    op.alter_column(
        "token_prices",
        "token_id",
        existing_type=sa.NUMERIC(),
        type_=sa.UUID(),
        existing_nullable=True,
    )
    op.drop_column("token_prices", "created_at")
    op.alter_column(
        "tokens",
        "id",
        existing_type=sa.NUMERIC(),
        type_=sa.UUID(),
        existing_nullable=False,
    )
    op.drop_column("tokens", "last_price_update")
    op.drop_column("tokens", "chain")
    op.drop_column("tokens", "created_at")
    op.drop_column("tokens", "updated_at")
    op.drop_column("tokens", "extra_metadata")
    op.alter_column(
        "transactions",
        "id",
        existing_type=sa.INTEGER(),
        type_=sa.UUID(),
        existing_nullable=False,
    )
    op.alter_column(
        "transactions",
        "wallet_id",
        existing_type=sa.NUMERIC(),
        type_=sa.UUID(),
        existing_nullable=True,
    )
    op.alter_column(
        "transactions",
        "token_id",
        existing_type=sa.NUMERIC(),
        type_=sa.UUID(),
        existing_nullable=True,
    )
    op.drop_index(op.f("ix_transactions_from_address"), table_name="transactions")
    op.drop_index(op.f("ix_transactions_to_address"), table_name="transactions")
    op.drop_column("transactions", "created_at")
    op.drop_column("transactions", "extra_metadata")
    op.drop_column("transactions", "to_address")
    op.drop_column("transactions", "from_address")
    op.alter_column(
        "users",
        "id",
        existing_type=sa.NUMERIC(),
        type_=sa.UUID(),
        existing_nullable=False,
    )
    op.alter_column("users", "created_at", existing_type=sa.DATETIME(), nullable=False)
    op.alter_column("users", "updated_at", existing_type=sa.DATETIME(), nullable=False)
    op.alter_column(
        "wallet_groups",
        "id",
        existing_type=sa.NUMERIC(),
        type_=sa.UUID(),
        existing_nullable=False,
    )
    op.alter_column(
        "wallet_groups",
        "wallet_id",
        existing_type=sa.NUMERIC(),
        type_=sa.UUID(),
        nullable=True,
    )
    op.alter_column(
        "wallet_groups",
        "group_id",
        existing_type=sa.NUMERIC(),
        type_=sa.UUID(),
        nullable=True,
    )
    op.alter_column(
        "wallets",
        "id",
        existing_type=sa.NUMERIC(),
        type_=sa.UUID(),
        existing_nullable=False,
    )
    op.alter_column("wallets", "address", existing_type=sa.VARCHAR(), nullable=False)
    op.alter_column(
        "wallets",
        "user_id",
        existing_type=sa.NUMERIC(),
        type_=sa.UUID(),
        nullable=False,
    )
    op.alter_column("wallets", "is_active", existing_type=sa.BOOLEAN(), nullable=False)
    op.alter_column(
        "wallets",
        "balance_usd",
        existing_type=sa.NUMERIC(precision=18, scale=2),
        type_=sa.Float(),
        existing_nullable=True,
    )
    op.alter_column(
        "wallets", "created_at", existing_type=sa.DATETIME(), nullable=False
    )
    op.alter_column(
        "wallets", "updated_at", existing_type=sa.DATETIME(), nullable=False
    )
    op.drop_index(op.f("ix_wallets_id"), table_name="wallets")
    op.drop_index(op.f("ix_wallets_user_id"), table_name="wallets")
    op.create_index(op.f("ix_wallets_address"), "wallets", ["address"], unique=False)
    op.drop_column("wallets", "balance")
    op.drop_column("wallets", "extra_metadata")
    op.drop_column("wallets", "type")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("wallets", sa.Column("type", sa.VARCHAR(), nullable=True))
    op.add_column("wallets", sa.Column("extra_metadata", sqlite.JSON(), nullable=True))
    op.add_column(
        "wallets",
        sa.Column(
            "balance",
            sa.NUMERIC(precision=18, scale=8),
            server_default=sa.text("'0'"),
            nullable=True,
        ),
    )
    op.drop_index(op.f("ix_wallets_address"), table_name="wallets")
    op.create_index(op.f("ix_wallets_user_id"), "wallets", ["user_id"], unique=False)
    op.create_index(op.f("ix_wallets_id"), "wallets", ["id"], unique=False)
    op.alter_column("wallets", "updated_at", existing_type=sa.DATETIME(), nullable=True)
    op.alter_column("wallets", "created_at", existing_type=sa.DATETIME(), nullable=True)
    op.alter_column(
        "wallets",
        "balance_usd",
        existing_type=sa.Float(),
        type_=sa.NUMERIC(precision=18, scale=2),
        existing_nullable=True,
    )
    op.alter_column("wallets", "is_active", existing_type=sa.BOOLEAN(), nullable=True)
    op.alter_column(
        "wallets", "user_id", existing_type=sa.UUID(), type_=sa.NUMERIC(), nullable=True
    )
    op.alter_column("wallets", "address", existing_type=sa.VARCHAR(), nullable=True)
    op.alter_column(
        "wallets",
        "id",
        existing_type=sa.UUID(),
        type_=sa.NUMERIC(),
        existing_nullable=False,
    )
    op.alter_column(
        "wallet_groups",
        "group_id",
        existing_type=sa.UUID(),
        type_=sa.NUMERIC(),
        nullable=False,
    )
    op.alter_column(
        "wallet_groups",
        "wallet_id",
        existing_type=sa.UUID(),
        type_=sa.NUMERIC(),
        nullable=False,
    )
    op.alter_column(
        "wallet_groups",
        "id",
        existing_type=sa.UUID(),
        type_=sa.NUMERIC(),
        existing_nullable=False,
    )
    op.alter_column("users", "updated_at", existing_type=sa.DATETIME(), nullable=True)
    op.alter_column("users", "created_at", existing_type=sa.DATETIME(), nullable=True)
    op.alter_column(
        "users",
        "id",
        existing_type=sa.UUID(),
        type_=sa.NUMERIC(),
        existing_nullable=False,
    )
    op.add_column(
        "transactions", sa.Column("from_address", sa.VARCHAR(), nullable=True)
    )
    op.add_column("transactions", sa.Column("to_address", sa.VARCHAR(), nullable=True))
    op.add_column(
        "transactions", sa.Column("extra_metadata", sqlite.JSON(), nullable=True)
    )
    op.add_column("transactions", sa.Column("created_at", sa.DATETIME(), nullable=True))
    op.create_index(
        op.f("ix_transactions_to_address"), "transactions", ["to_address"], unique=False
    )
    op.create_index(
        op.f("ix_transactions_from_address"),
        "transactions",
        ["from_address"],
        unique=False,
    )
    op.alter_column(
        "transactions",
        "token_id",
        existing_type=sa.UUID(),
        type_=sa.NUMERIC(),
        existing_nullable=True,
    )
    op.alter_column(
        "transactions",
        "wallet_id",
        existing_type=sa.UUID(),
        type_=sa.NUMERIC(),
        existing_nullable=True,
    )
    op.alter_column(
        "transactions",
        "id",
        existing_type=sa.UUID(),
        type_=sa.INTEGER(),
        existing_nullable=False,
    )
    op.add_column("tokens", sa.Column("extra_metadata", sqlite.JSON(), nullable=True))
    op.add_column("tokens", sa.Column("updated_at", sa.DATETIME(), nullable=True))
    op.add_column("tokens", sa.Column("created_at", sa.DATETIME(), nullable=True))
    op.add_column("tokens", sa.Column("chain", sa.VARCHAR(), nullable=True))
    op.add_column(
        "tokens", sa.Column("last_price_update", sa.DATETIME(), nullable=True)
    )
    op.alter_column(
        "tokens",
        "id",
        existing_type=sa.UUID(),
        type_=sa.NUMERIC(),
        existing_nullable=False,
    )
    op.add_column("token_prices", sa.Column("created_at", sa.DATETIME(), nullable=True))
    op.alter_column(
        "token_prices",
        "token_id",
        existing_type=sa.UUID(),
        type_=sa.NUMERIC(),
        existing_nullable=True,
    )
    op.alter_column(
        "token_prices",
        "id",
        existing_type=sa.UUID(),
        type_=sa.NUMERIC(),
        existing_nullable=False,
    )
    op.add_column(
        "token_balances", sa.Column("updated_at", sa.DATETIME(), nullable=True)
    )
    op.alter_column(
        "token_balances",
        "token_id",
        existing_type=sa.UUID(),
        type_=sa.NUMERIC(),
        existing_nullable=True,
    )
    op.alter_column(
        "token_balances",
        "wallet_id",
        existing_type=sa.UUID(),
        type_=sa.NUMERIC(),
        existing_nullable=True,
    )
    op.alter_column(
        "token_balances",
        "id",
        existing_type=sa.UUID(),
        type_=sa.NUMERIC(),
        existing_nullable=False,
    )
    op.add_column(
        "refresh_tokens",
        sa.Column(
            "created_at",
            sa.DATETIME(),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
    )
    op.add_column(
        "refresh_tokens",
        sa.Column("revoked", sa.BOOLEAN(), server_default=sa.text("0"), nullable=False),
    )
    op.drop_constraint("uq_refresh_tokens_jti_hash", "refresh_tokens", type_="unique")
    op.drop_index(op.f("ix_refresh_tokens_id"), table_name="refresh_tokens")
    op.drop_index(op.f("ix_refresh_tokens_expires_at"), table_name="refresh_tokens")
    op.alter_column(
        "refresh_tokens",
        "user_id",
        existing_type=sa.UUID(),
        type_=sa.NUMERIC(),
        existing_nullable=False,
    )
    op.alter_column(
        "refresh_tokens",
        "id",
        existing_type=sa.UUID(),
        type_=sa.NUMERIC(),
        existing_nullable=False,
    )
    op.alter_column(
        "portfolio_snapshots",
        "id",
        existing_type=sa.UUID(),
        type_=sa.NUMERIC(),
        existing_nullable=False,
    )
    op.alter_column(
        "portfolio_snapshot_cache",
        "created_at",
        existing_type=sa.DATETIME(),
        nullable=True,
    )
    op.alter_column(
        "portfolio_snapshot_cache",
        "id",
        existing_type=sa.UUID(),
        type_=sa.NUMERIC(),
        existing_nullable=False,
    )
    op.drop_column("portfolio_snapshot_cache", "updated_at")
    op.add_column(
        "historical_balances", sa.Column("created_at", sa.DATETIME(), nullable=True)
    )
    op.alter_column(
        "historical_balances",
        "token_id",
        existing_type=sa.UUID(),
        type_=sa.NUMERIC(),
        existing_nullable=True,
    )
    op.alter_column(
        "historical_balances",
        "wallet_id",
        existing_type=sa.UUID(),
        type_=sa.NUMERIC(),
        nullable=True,
    )
    op.alter_column(
        "historical_balances",
        "id",
        existing_type=sa.UUID(),
        type_=sa.NUMERIC(),
        existing_nullable=False,
    )
    op.add_column("groups", sa.Column("created_at", sa.DATETIME(), nullable=True))
    op.add_column(
        "groups", sa.Column("description", sa.VARCHAR(length=255), nullable=True)
    )
    op.alter_column(
        "groups",
        "user_id",
        existing_type=sa.UUID(),
        type_=sa.NUMERIC(),
        existing_nullable=True,
    )
    op.alter_column(
        "groups",
        "id",
        existing_type=sa.UUID(),
        type_=sa.NUMERIC(),
        existing_nullable=False,
    )
    op.alter_column(
        "aggregate_metrics",
        "id",
        existing_type=sa.UUID(),
        type_=sa.NUMERIC(),
        existing_nullable=False,
    )
    # ### end Alembic commands ###
