version: '3.9'

# -----------------------------------------------------------------------------
# End-to-End Test Compose File for Backup/Restore Testing
# -----------------------------------------------------------------------------
# This compose file provides isolated PostgreSQL instances for comprehensive
# end-to-end testing of the backup and restore functionality. Each test can
# spin up fresh containers to ensure complete isolation and prevent test
# interference.
#
# Usage:
#   # Start all test services
#   docker compose -f docker-compose.e2e.yml up -d
#
#   # Run end-to-end tests
#   cd backend && pytest -m e2e
#
#   # Run performance tests only
#   cd backend && pytest -m performance
#
#   # Stop and remove containers
#   docker compose -f docker-compose.e2e.yml down -v
# -----------------------------------------------------------------------------

services:
  # Standard test PostgreSQL instance for basic E2E tests
  postgres-e2e:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: testuser
      POSTGRES_PASSWORD: testpass
      POSTGRES_DB: testdb
    ports:
      - "5434:5432"  # Different port to avoid conflicts
    volumes:
      - ./backend/tests/fixtures/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U testuser -d testdb"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - e2e-network

  # Large dataset PostgreSQL instance for performance testing
  postgres-large:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: testuser
      POSTGRES_PASSWORD: testpass
      POSTGRES_DB: largedb
    ports:
      - "5435:5432"  # Different port to avoid conflicts
    volumes:
      - ./backend/tests/fixtures/large_dataset.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U testuser -d largedb"]
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - e2e-network

  # PostgreSQL 16 instance for version compatibility testing
  postgres-16:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: testuser
      POSTGRES_PASSWORD: testpass
      POSTGRES_DB: testdb16
    ports:
      - "5436:5432"  # Different port to avoid conflicts
    volumes:
      - ./backend/tests/fixtures/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U testuser -d testdb16"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - e2e-network

  # Redis for testing Celery tasks and caching
  redis-e2e:
    image: redis:7-alpine
    ports:
      - "6381:6379"  # Different port to avoid conflicts
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3
    networks:
      - e2e-network

  # Optional: PostgreSQL instance for testing restore operations
  postgres-restore:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: testuser
      POSTGRES_PASSWORD: testpass
      POSTGRES_DB: restoredb
    ports:
      - "5437:5432"  # Different port to avoid conflicts
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U testuser -d restoredb"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - e2e-network

networks:
  e2e-network:
    driver: bridge 